this is a test doc file.
now updated.


g
TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository
$ git init
Initialized empty Git repository in D:/test repository/.git/

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git add tets.txt
fatal: pathspec 'tets.txt' did not match any files

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git add test.txt

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git commit -m "My First Task Done"
[master (root-commit) eba6556] My First Task Done
 1 file changed, 1 insertion(+)
 create mode 100644 test.txt

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ https://github.com/Uttej1997/test_application.git
bash: https://github.com/Uttej1997/test_application.git: No such file or director

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   test.txt


TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git commit -m " Task Updated"
[master 4c42c45]  Task Updated
 1 file changed, 1 insertion(+)

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git remote add origin https://github.com/Uttej1997/new_test.git

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push -u origin
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git remote add origin https://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@github.c
error: remote origin already exists.

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6), 492 bytes | 61.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Uttej1997/new_test.git
 * [new branch]      master -> master
TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Everything up-to-date

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git commit -m "Code Added"
[master fa21be1] Code Added
 1 file changed, 100 insertions(+)

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 1.17 KiB | 42.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Uttej1997/new_test.git
   4c42c45..fa21be1  master -> master

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git commit -m "code changed"
[master 86575a7] code changed
 1 file changed, 29 insertions(+)

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 437 bytes | 437.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Uttej1997/new_test.git
   fa21be1..86575a7  master -> master

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git remote show origin
* remote origin
  Fetch URL: https://github.com/Uttej1997/new_test.git
  Push  URL: https://github.com/Uttej1997/new_test.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (up to date)

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Everything up-to-date

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git push origin master
Everything up-to-date

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch
* master

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch A

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch B


TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch
  A
  B
* master

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout A
Switched to branch 'A'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git checkout B
Switched to branch 'B'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git checkout master
Switched to branch 'master'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout -c branchname
error: unknown switch `c'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge, diff3, or zdiff3)
    -d, --detach          detach HEAD at named commit
    -t, --track[=(direct|inherit)]
                          set branch tracking configuration
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout -b
error: switch `b' requires a value

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkouy B
git: 'checkouy' is not a git command. See 'git --help'.

The most similar command is
        checkout

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout B
Switched to branch 'B'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git checkout -B C
Switched to a new branch 'C'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (C)
$ git branch

  A
  B
* C
  master

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (C)
$

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (C)
$ git cheeckout master
git: 'cheeckout' is not a git command. See 'git --help'.

The most similar command is
        checkout

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (C)
$ git checkout master
Switched to branch 'master'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git status
On branch master
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout A
Switched to branch 'A'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git commit -m "file created in branch A"
[A d048234] file created in branch A
 1 file changed, 1 insertion(+)
 create mode 100644 Branch_Concept.txt

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git status
On branch A
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git push remote origin
error: src refspec origin does not match any
error: failed to push some refs to 'remote'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git push origin A
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 315 bytes | 157.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'A' on GitHub by visiting:
remote:      https://github.com/Uttej1997/new_test/pull/new/A
remote:
To https://github.com/Uttej1997/new_test.git
 * [new branch]      A -> A

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git status
On branch A
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git statuss
git: 'statuss' is not a git command. See 'git --help'.

The most similar command is
        status

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git status
On branch A
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Branch_Concept.txt

no changes added to commit (use "git add" and/or "git commit -a")

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git commit -m "change done in branch A"
[A 6ccf666] change done in branch A
 1 file changed, 1 insertion(+), 1 deletion(-)

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git checkout master
Switched to branch 'master'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout B
Switched to branch 'B'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git status
On branch B
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    test.txt

no changes added to commit (use "git add" and/or "git commit -a")

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git add .

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git commit -m "deleted file test.txt from branch B"
[B b14f908] deleted file test.txt from branch B
 1 file changed, 131 deletions(-)
 delete mode 100644 test.txt

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git status
On branch B
nothing to commit, working tree clean

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (B)
$ git checkout master
Switched to branch 'master'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git checkout A
Switched to branch 'A'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (A)
$ git checkout master
Switched to branch 'master'

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git merge A
Updating 86575a7..6ccf666
Fast-forward
 Branch_Concept.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 Branch_Concept.txt

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch -D A
Deleted branch A (was 6ccf666).

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch -D C
Deleted branch C (was 86575a7).

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$ git branch -D B
Deleted branch B (was b14f908).

TOSHIBA@DESKTOP-27T5VDS MINGW64 /d/test repository (master)
$
